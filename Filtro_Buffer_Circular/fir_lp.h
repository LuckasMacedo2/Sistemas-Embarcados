/**************************************************************
WinFilter version 0.8
http://www.winfilter.20m.com
akundert@hotmail.com

Filter type: Low Pass
Filter model: Bessel
Filter order: 10
Sampling Frequency: 4 Hz
Cut Frequency: 1.000000 Hz
Coefficents Quantization: float

Z domain Zeros
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000
z = -1.000000 + j 0.000000

Z domain Poles
z = -0.023868 + j -0.486108
z = -0.023868 + j 0.486108
z = 0.015377 + j -0.327829
z = 0.015377 + j 0.327829
z = -0.106544 + j -0.685974
z = -0.106544 + j 0.685974
z = 0.035305 + j -0.190015
z = 0.035305 + j 0.190015
z = 0.043875 + j -0.062310
z = 0.043875 + j 0.062310
***************************************************************/
#define Ntap 31

float fir(float NewSample) {
    float FIRCoef[Ntap] = { 
        -0.00001356720887555112,
        -0.00009992809329332712,
        0.00008470547453583690,
        0.00017803189658586620,
        -0.00029811394081561961,
        -0.00022880689526524911,
        0.00085869112203365713,
        -0.00004009521385253093,
        -0.00219525421136588030,
        0.00188705675802095900,
        0.00526310886091492860,
        -0.01143264964736480500,
        -0.01551900213517299300,
        0.07931576765614425900,
        0.26183667043387565000,
        0.36080677028778946000,
        0.26183667043387565000,
        0.07931576765614425900,
        -0.01551900213517299300,
        -0.01143264964736480500,
        0.00526310886091492860,
        0.00188705675802095900,
        -0.00219525421136588030,
        -0.00004009521385253093,
        0.00085869112203365713,
        -0.00022880689526524911,
        -0.00029811394081561961,
        0.00017803189658586620,
        0.00008470547453583690,
        -0.00009992809329332712,
        -0.00001356720887555112
    };

    static float x[Ntap]; //input samples
    float y=0;            //output sample
    int n;

    //shift the old samples
    for(n=Ntap-1; n>0; n--)
       x[n] = x[n-1];

    //Calculate the new output
    x[0] = NewSample;
    for(n=0; n<Ntap; n++)
        y += FIRCoef[n] * x[n];
    
    return y;
}
